############################################################
# UserRestController Postman 테스트 가이드
# API 서버는 http://localhost:8080 으로 실행 중
############################################################


# 1. 회원가입 (Add User)
# ------------------------------------------------------------
- Method: POST
- URL: http://localhost:8080/user/json/addUser
- Headers:
    - Content-Type: application/json
- Body (raw, JSON):
{
    "userId": "testuser01",
    "userName": "테스트유저",
    "password": "password12",
    "ssn": "9001011234567",
    "addr": "서울시 강남구",
    "phone": "010-1234-5678",
    "email": "testuser01@example.com"
}



# 2. 로그인 (Login)
# ------------------------------------------------------------
- Method: POST
- URL: http://localhost:8080/user/json/login
- Headers:
    - Content-Type: application/json
- Body (raw, JSON):
{
    "userId": "testuser01",
    "password": "password12"
}
- 참고: 로그인 성공 시 Postman의 응답(Response) 섹션에서 Cookies 탭을 확인 
          JSESSIONID가 생성된 것을 볼 수 있습니다.



# 3. 회원 정보 조회 (Get User)
# ------------------------------------------------------------
- Method: GET
- URL: http://localhost:8080/user/json/getUser/testuser01
- 설명: URL의 마지막 부분(testuser01)에 조회하고 싶은 사용자의 아이디를 입력합니다.



# 4. 회원 목록 조회 (Get User List)
# ------------------------------------------------------------
- Method: POST
- URL: http://localhost:8080/user/json/getUserList
- Headers:
    - Content-Type: application/json
- Body (raw, JSON):
{
    "currentPage": 1,
    "pageSize": 5
}



# 5. 회원 정보 수정 (Update User)
# ------------------------------------------------------------
- Method: POST
- URL: http://localhost:8080/user/json/updateUser
- Headers:
    - Content-Type: application/json
- Body (raw, JSON):
{
    "userId": "testuser01",
    "userName": "테스트유저수정",
    "addr": "서울시 서초구",
    "phone": "010-8765-4321",
    "email": "updateduser@example.com"
}



# 6. 아이디 중복 확인 (Check Duplication)
# ------------------------------------------------------------
- Method: GET
- URL: http://localhost:8080/user/json/checkDuplication/testuser01
- 설명: URL의 마지막 부분(testuser01)에 확인하고 싶은 아이디를 입력합니다. 
         가입된 아이디일 경우 false, 아닐 경우 true가 반환됩니다.



# 7. 로그인 상태 확인 (Check Login)
# ------------------------------------------------------------
- Method: GET
- URL: http://localhost:8080/user/json/checkLogin
- 설명: 로그인이 되어있는 상태에서 이 API를 호출하면 현재 세션에 저장된 사용자 정보가 반환됩니다. 
         로그아웃 상태라면 null이 반환됩니다.




# 8. 로그아웃 (Logout)
# ------------------------------------------------------------
- Method: POST
- URL: http://localhost:8080/user/json/logout
- 설명: 이 API를 호출하면 서버의 현재 세션이 무효화됩니다. Body는 비워두고 요청합니다.


# 8.1. 로그아웃 확인 상태 확인 (Check Login)
# ------------------------------------------------------------
- Method: GET
- URL: http://localhost:8080/user/json/checkLogin
- 설명: 로그인이 되어있는 상태에서 이 API를 호출하면 현재 세션에 저장된 사용자 정보가 반환됩니다. 
         로그아웃 상태라면 null이 반환됩니다.